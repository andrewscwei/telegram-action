name: Release
on:
  push:
    branches: [master]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      GIT_AUTHOR_NAME: github-actions[bot]
      GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
      GIT_COMMITTER_NAME: github-actions[bot]
      GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        id: build
        uses: andrewscwei/actions/node-build@v2
        with:
          prebuild-command: npm run unit
      - name: Release semantic version
        run: npx semantic-release
      - name: Release major version
        run: |
          VERSION="$(git tag --points-at $(git rev-parse HEAD))"

          if [ -z $VERSION ]; then
            echo "No major version to publish" >> $GITHUB_STEP_SUMMARY
          else
            COMMIT_MESSAGE="$(git log -1 --pretty=%B)"
            DIST_DIR=dist
            MAJOR_VERSION="$(cut -d '.' -f 1 <<< "$VERSION")"
            ORIGIN_URL="https://${GIT_AUTHOR_NAME}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

            if [ `git branch | grep ${MAJOR_VERSION}` ]; then git branch -D ${MAJOR_VERSION}; fi
            git checkout -b ${MAJOR_VERSION}

            npm prune --production

            find . -maxdepth 1 \
              ! -name '.' \
              ! -name '..' \
              ! -name ${DIST_DIR} \
              ! -name '.git' \
              ! -name 'action.yml' \
              ! -name 'node_modules' \
              ! -name 'package.json' \
              ! -name 'README.md' \
              -exec rm -rf {} \;

            git config user.name "${GIT_AUTHOR_NAME}"
            git config user.email "${GIT_AUTHOR_EMAIL}"
            git add -fA
            git commit --allow-empty -m "${COMMIT_MESSAGE}"
            git push -f --set-upstream ${ORIGIN_URL} refs/heads/${MAJOR_VERSION}
            git tag -fa ${MAJOR_VERSION} -m "Map ${MAJOR_VERSION} to ${VERSION}"
            git push origin refs/tags/${MAJOR_VERSION} --force

            echo "Successfully published semantic version \`$VERSION\` and major version \`$MAJOR_VERSION\`" >> $GITHUB_STEP_SUMMARY
          fi
  notify:
    needs: [release]
    name: Notify
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: andrewscwei/telegram-action@v1
        with:
          success: ${{ needs.release.result == 'success' }}
          cancelled: ${{ needs.release.result == 'cancelled' }}
          bot-token: ${{ secrets.TELEGRAM_DEVOPS_BOT_TOKEN }}
          chat-id: ${{ secrets.TELEGRAM_DEVOPS_CHAT_ID }}
